----------------------------------------------------------------------
--NOME: Peddro Vieira Bonangelo
--RM:   211047

----------------------------------------------------------------------
--BANCO & TABELAS CRIADAS

CREATE DATABASE ATIVIDADE
USE ATIVIDADE
GO
IF EXISTS (SELECT 1 FROM sysobjects WHERE xtype = 'U' AND name = 'SEXO')
	DROP TABLE SEXO
GO
CREATE TABLE SEXO
(
idSEXO INT NOT NULL,
dsSEXO VARCHAR(15) NOT NULL
)
GO
ALTER TABLE SEXO ADD CONSTRAINT SEXO_PK PRIMARY KEY (idSEXO)
GO
INSERT INTO SEXO VALUES (1,'Masculino')
INSERT INTO SEXO VALUES (2,'Feminino')
go
IF EXISTS (SELECT 1 FROM sysobjects WHERE xtype = 'U' AND name = 'PESSOAS')
	DROP TABLE PESSOAS
GO
CREATE TABLE PESSOAS
(
idPESSOA INT NOT NULL,
idSEXO INT NOT NULL,
CPF_PESSOA VARCHAR(11) NOT NULL,
RG_PESSOA VARCHAR(15) NOT NULL,
NM_PESSOA VARCHAR(25) NOT NULL,
SN_PESSOA VARCHAR(25) NOT NULL,
DT_PESSOA SMALLDATETIME NOT NULL,
DC_PESSOA SMALLDATETIME NOT NULL,
DU_PESSOA SMALLDATETIME NOT NULL
)
GO
ALTER TABLE PESSOAS ADD CONSTRAINT PESSOAS_PK PRIMARY KEY (idPESSOA)
ALTER TABLE PESSOAS ADD CONSTRAINT PESSOAS_FK01 FOREIGN KEY (idSEXO) REFERENCES SEXO (idSEXO)
GO
IF EXISTS (SELECT 1 FROM sysobjects WHERE xtype = 'U' AND name = 'LOG_PESSOAS')
	DROP TABLE LOG_PESSOAS
GO
CREATE TABLE LOG_PESSOAS
(
idPESSOA INT NOT NULL,
CONTROLE INT NOT NULL,
MOMENTO SMALLDATETIME NOT NULL,
ACAO CHAR(1) NOT NULL,
NM_PESSOA VARCHAR(25) NOT NULL,
SN_PESSOA VARCHAR(25) NOT NULL
)
GO
ALTER TABLE LOG_PESSOAS ADD CONSTRAINT LOG_PESSOAS_PK PRIMARY KEY (idPESSOA,CONTROLE)
ALTER TABLE LOG_PESSOAS ADD CONSTRAINT LOG_PESSOAS_CK01 CHECK  (ACAO IN ('I','D','A'))
GO
IF EXISTS (SELECT 1 FROM sysobjects WHERE xtype = 'U' AND name = 'ACESSO')
	DROP TABLE ACESSO
GO
CREATE TABLE ACESSO
(
idACESSO INT NOT NULL,
idPESSOA INT NOT NULL,
dcACESSO SMALLDATETIME NOT NULL,
dsACESSO SMALLDATETIME NOT NULL,
vsACESSO INT NOT NULL,
seACESSO BINARY NOT NULL
)
ALTER TABLE ACESSO ADD CONSTRAINT ACESSO_PK PRIMARY KEY (idACESSO)
ALTER TABLE ACESSO ADD CONSTRAINT ACESSO_FK01 FOREIGN KEY (idPESSOA) REFERENCES PESSOAS (idPESSOA)
ALTER TABLE ACESSO ADD CONSTRAINT ACESSO_DF01 DEFAULT CURRENT_TIMESTAMP FOR dcACESSO
GO
IF EXISTS (SELECT 1 FROM sysobjects WHERE xtype = 'U' AND name = 'SENHAS_ACESSO')
	DROP TABLE SENHAS_ACESSO
GO
CREATE TABLE SENHAS_ACESSO
(
idACESSO INT NOT NULL,
daSENHASACESSO SMALLDATETIME NOT NULL,
seSENHASACESSO BINARY NOT NULL
)
ALTER TABLE SENHAS_ACESSO ADD CONSTRAINT SENHAS_ACESSO_PK PRIMARY KEY (idACESSO, daSENHASACESSO)
ALTER TABLE SENHAS_ACESSO ADD CONSTRAINT SENHAS_ACESSO_FK01 FOREIGN KEY (idACESSO) REFERENCES ACESSO (idACESSO)
ALTER TABLE SENHAS_ACESSO ADD CONSTRAINT SENHAS_ACESSO_DF01 DEFAULT CURRENT_TIMESTAMP FOR daSENHASACESSO
GO


----------------------------------------------------------------------
--TRIGGER CRIADA

CREATE TRIGGER IncluirLog
ON PESSOAS
FOR INSERT,UPDATE,DELETE
AS

	BEGIN
		DECLARE @CONTROLE		INT,
				@ACAO			CHAR(1),
				@ID				INT,
				@NOME			VARCHAR(25),
				@SOBRE			VARCHAR(25)

		SELECT @CONTROLE = MAX(CONTROLE) FROM  LOG_PESSOAS

		IF((SELECT COUNT(*) FROM inserted HAVING COUNT(*) >=1) AND (SELECT COUNT(*) FROM deleted COUNT(*) = 0)) 
		BEGIN
			INSERT INTO LOG_PESSOAS 
            SELECT @ID = INS.idPESSOA, (SELECT ISNULL(MAX(CONTROLE),0)+1 FROM LOG_PESSOAS), CURRENT_TIMESTAMP, @ACAO = 'I', @NOME= INS.NM_PESSOA, @SOBRE = INS.SN_PESSOA
			FROM inserted INS
		END

		ELSE
		BEGIN
			IF((SELECT COUNT(*) FROM deleted HAVING COUNT(*) >=1) AND (SELECT COUNT(*) FROM inserted COUNT(*) = 0))
			BEGIN
				INSERT INTO LOG_PESSOAS 
				SELECT @ID = DEL.idPESSOA, (SELECT ISNULL(MAX(CONTROLE),0)+1 FROM LOG_PESSOAS), CURRENT_TIMESTAMP, @ACAO = 'E', @NOME= DEL.NM_PESSOA, @SOBRE = DEL.SN_PESSOA
				FROM deleted DEL
			END

			ELSE
			BEGIN
				INSERT INTO LOG_PESSOAS 
				SELECT @ID = DEL.idPESSOA, (SELECT ISNULL(MAX(CONTROLE),0)+1 FROM LOG_PESSOAS), CURRENT_TIMESTAMP, @ACAO = 'A', @NOME= DEL.NM_PESSOA, @SOBRE = DEL.SN_PESSOA
				FROM deleted DEL


			END
		END

	END